type JobStatus {
    jobId: ID!
    status: Status!
    gainsLosses: Float!
    currentValueUsd: Float!
    currentFundsUsd: Float!
    startingFundsUsd: Float!
    currency: Currency
    size: Float
    price: Float
}

enum Status {
    PENDING,
    RUNNING,
    STOPPED,
    FINISHED
}

enum Currency {
    XLM,
    BTC,
    ETH,
    LTC,
    BCH,
    EOS,
    DASH,
    OXT,
    MKR,
    ATOM,
    XTZ,
    ETC,
    OMG,
    ZEC,
    LINK,
    REP,
    ZRX,
    ALGO,
    DAI,
    KNC,
    COMP,
    BAND,
    NMR,
    CGLD,
    UMA,
    LRC,
    YFI,
    UNI,
    REN,
    BAL,
    WBTC,
    NU,
    FIL,
    AAVE,
    GRT,
    BNT,
    SNX,
    USD,
}

# Gets status of running job(s)
type Query {
    # Returns total amount of gains or losses for all jobs
    totalGainsLosses:Float

    # Gets status of a running job
    job(id: ID!):JobStatus

    # Gets statuses of all running jobs
    jobs:[JobStatus]

    # Gets ticker feeds being recieved
    activeFeeds:[Currency]
}

# Start a new job
type Mutation {
    # Creates new job
    createJob(
        # Currency tag
        currency: Currency!,
        # Which Dollar tenths to round. Example: 0 = X.XX and 1 = X.X0
        precisionFromCent: Int!
        # Max yield for sell
        percentageYieldThreshold: Float!,
        # Max yield for sell
        totalPercentageYieldThreshold: Float = 10.0,
        # Floor threshoold to buy
        floor: Float!,
        # Starting amount dollars to invest
        funds: Float!,
        # Date automated trader should stop trading in UTC timezone. Format: yyyy-mm-ddTHH:MM:SSZ Example: 2021-01-31T07:44:44Z
        expires: String!
    ):JobStatus

    # Stops a running job
    stopJob(id: ID!):JobStatus
}